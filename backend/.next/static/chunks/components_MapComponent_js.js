"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["components_MapComponent_js"],{

/***/ "./components/MapComponent.js":
/*!************************************!*\
  !*** ./components/MapComponent.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MapComponent; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/_/_tagged_template_literal */ \"./node_modules/@swc/helpers/esm/_tagged_template_literal.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @apollo/client */ \"./node_modules/@apollo/client/index.js\");\n\nfunction _templateObject() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n  query GetLocations {\\n    locations {\\n      location_id\\n      location_name\\n      latitude\\n      longitude\\n      elevation_m\\n      unit_type\\n      location_category\\n      pit_name\\n      region_name\\n    }\\n  }\\n\"\n    ]);\n    _templateObject = function() {\n        return data;\n    };\n    return data;\n}\nfunction _templateObject1() {\n    const data = (0,_swc_helpers_tagged_template_literal__WEBPACK_IMPORTED_MODULE_0__._)([\n        \"\\n  query GetSegments($limit: Int) {\\n    segments(limit: $limit) {\\n      lane_id\\n      road_id\\n      direction\\n      length_m\\n      time_empty_seconds\\n      time_loaded_seconds\\n      is_closed\\n      geometry\\n      start_latitude\\n      start_longitude\\n      end_latitude\\n      end_longitude\\n    }\\n  }\\n\"\n    ]);\n    _templateObject1 = function() {\n        return data;\n    };\n    return data;\n}\n\nvar _s = $RefreshSig$();\n\n\n\n// GraphQL queries\nconst GET_LOCATIONS = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_3__.gql)(_templateObject());\nconst GET_SEGMENTS = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_3__.gql)(_templateObject1());\nfunction MapComponent() {\n    var _locationsData_locations, _segmentsData_segments;\n    _s();\n    const mapRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const mapInstanceRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const mapInitializedRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(false);\n    const { data: locationsData, loading: locationsLoading, error: locationsError } = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_3__.useQuery)(GET_LOCATIONS, {\n        fetchPolicy: \"cache-and-network\",\n        errorPolicy: \"all\"\n    });\n    const { data: segmentsData, loading: segmentsLoading, error: segmentsError } = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_3__.useQuery)(GET_SEGMENTS, {\n        variables: {\n            limit: 100000\n        },\n        fetchPolicy: \"cache-and-network\",\n        errorPolicy: \"all\"\n    });\n    const loading = locationsLoading || segmentsLoading;\n    const error = locationsError || segmentsError;\n    const resetComponentState = ()=>{\n        mapInitializedRef.current = false;\n        if (mapInstanceRef.current) {\n            mapInstanceRef.current.remove();\n            mapInstanceRef.current = null;\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        resetComponentState();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (false) {}\n        mapInitializedRef.current = false;\n        const loadMap = async ()=>{\n            const L = (await __webpack_require__.e(/*! import() */ \"node_modules_leaflet_dist_leaflet-src_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! leaflet */ \"./node_modules/leaflet/dist/leaflet-src.js\", 23))).default;\n            let mapContainer = null;\n            let retries = 0;\n            const maxRetries = 10;\n            while(!mapContainer && retries < maxRetries){\n                await new Promise((resolve)=>setTimeout(resolve, 200));\n                mapContainer = document.getElementById(\"map\");\n                if (!mapContainer) {\n                    console.log(\"Map container not found, retrying... (\".concat(retries + 1, \"/\").concat(maxRetries, \")\"));\n                    retries++;\n                }\n            }\n            if (!mapContainer) {\n                console.error(\"Map container not found after all retries\");\n                return;\n            }\n            console.log(\"✅ Map container found, initializing map...\");\n            if (mapInstanceRef.current) {\n                console.log(\"Removing existing map...\");\n                mapInstanceRef.current.remove();\n                mapInstanceRef.current = null;\n            }\n            if (mapContainer && mapContainer._leaflet_id) {\n                console.log(\"Clearing existing leaflet ID...\");\n                delete mapContainer._leaflet_id;\n            }\n            const map = L.map(\"map\", {\n                center: [\n                    -23.5,\n                    148.5\n                ],\n                crs: L.CRS.EPSG3857,\n                zoom: 12,\n                zoomControl: true,\n                preferCanvas: false\n            });\n            mapInstanceRef.current = map;\n            mapInitializedRef.current = true;\n            console.log(\"✅ Map initialized successfully\");\n            window.map = map;\n            window.m_bezier = map;\n            const tile_layer_86af411fcaa14b2e8914466b52009633 = L.tileLayer(\"https://api.mapbox.com/styles/v1/mapbox/satellite-streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY291cHN0ZXI3NCIsImEiOiJja2xwdjRwaWYwc2Q2Mm9sYmprbzhueng2In0.p-FbkbBhJWBKW-evWZfmgw\", {\n                minZoom: 0,\n                maxZoom: 18,\n                maxNativeZoom: 18,\n                noWrap: false,\n                attribution: \"Mapbox\",\n                subdomains: \"abc\",\n                detectRetina: false,\n                tms: false,\n                opacity: 1\n            });\n            tile_layer_86af411fcaa14b2e8914466b52009633.addTo(map);\n            const tile_layer_651c217e91599c788c1d2f4ddcee22ef = L.tileLayer(\"https://api.mapbox.com/styles/v1/mapbox/outdoors-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY291cHN0ZXI3NCIsImEiOiJja2xwdjRwaWYwc2Q2Mm9sYmprbzhueng2In0.p-FbkbBhJWBKW-evWZfmgw\", {\n                minZoom: 0,\n                maxZoom: 18,\n                maxNativeZoom: 18,\n                noWrap: false,\n                attribution: \"Mapbox\",\n                subdomains: \"abc\",\n                detectRetina: false,\n                tms: false,\n                opacity: 1\n            });\n            const tile_layer_1aea0a94978ecf4d7f1ce0096a692741 = L.tileLayer(\"https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY291cHN0ZXI3NCIsImEiOiJja2xwdjRwaWYwc2Q2Mm9sYmprbzhueng2In0.p-FbkbBhJWBKW-evWZfmgw\", {\n                minZoom: 0,\n                maxZoom: 18,\n                maxNativeZoom: 18,\n                noWrap: false,\n                attribution: \"Mapbox\",\n                subdomains: \"abc\",\n                detectRetina: false,\n                tms: false,\n                opacity: 1\n            });\n            const tile_layer_bdb278bfd7bf45bd3f1b7e3f12a6fdd3 = L.tileLayer(\"https://api.mapbox.com/styles/v1/mapbox/satellite-v9/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY291cHN0ZXI3NCIsImEiOiJja2xwdjRwaWYwc2Q2Mm9sYmprbzhueng2In0.p-FbkbBhJWBKW-evWZfmgw\", {\n                minZoom: 0,\n                maxZoom: 22,\n                maxNativeZoom: 22,\n                noWrap: false,\n                attribution: \"Mapbox\",\n                subdomains: \"abc\",\n                detectRetina: false,\n                tms: false,\n                opacity: 1\n            });\n            const tile_layer_ef915ab92e0ddcb9e840955a9d4420f5 = L.tileLayer(\"https://api.mapbox.com/styles/v1/mapbox/standard/tiles/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiY291cHN0ZXI3NCIsImEiOiJja2xwdjRwaWYwc2Q2Mm9sYmprbzhueng2In0.p-FbkbBhJWBKW-evWZfmgw\", {\n                minZoom: 0,\n                maxZoom: 22,\n                maxNativeZoom: 22,\n                noWrap: false,\n                attribution: \"Mapbox\",\n                subdomains: \"abc\",\n                detectRetina: false,\n                tms: false,\n                opacity: 1\n            });\n            const tile_layer_ec0e266dacdd9ae8792153e00204f440 = L.tileLayer(\"https://api.mapbox.com/styles/v1/mapbox/dark-v10/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY291cHN0ZXI3NCIsImEiOiJja2xwdjRwaWYwc2Q2Mm9sYmprbzhueng2In0.p-FbkbBhJWBKW-evWZfmgw\", {\n                minZoom: 0,\n                maxZoom: 22,\n                maxNativeZoom: 22,\n                noWrap: false,\n                attribution: \"Mapbox\",\n                subdomains: \"abc\",\n                detectRetina: false,\n                tms: false,\n                opacity: 1\n            });\n            const tile_layer_980b7691b39ace86f5bc5a9b1a738389 = L.tileLayer(\"https://api.mapbox.com/styles/v1/mapbox/navigation-night-v1/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY291cHN0ZXI3NCIsImEiOiJja2xwdjRwaWYwc2Q2Mm9sYmprbzhueng2In0.p-FbkbBhJWBKW-evWZfmgw\", {\n                minZoom: 0,\n                maxZoom: 22,\n                maxNativeZoom: 22,\n                noWrap: false,\n                attribution: \"Mapbox\",\n                subdomains: \"abc\",\n                detectRetina: false,\n                tms: false,\n                opacity: 1\n            });\n            const tile_layer_4378b744272a22f78c14c9e80b830eb8 = L.tileLayer(\"https://api.mapbox.com/styles/v1/mapbox/dark-v10/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY291cHN0ZXI3NCIsImEiOiJja2xwdjRwaWYwc2Q2Mm9sYmprbzhueng2In0.p-FbkbBhJWBKW-evWZfmgw\", {\n                minZoom: 0,\n                maxZoom: 22,\n                maxNativeZoom: 22,\n                noWrap: false,\n                attribution: \"Mapbox\",\n                subdomains: \"abc\",\n                detectRetina: false,\n                tms: false,\n                opacity: 1\n            });\n            const baseLayers = {\n                \"Satellite Streets\": tile_layer_86af411fcaa14b2e8914466b52009633,\n                \"Topographic\": tile_layer_651c217e91599c788c1d2f4ddcee22ef,\n                \"Streets\": tile_layer_1aea0a94978ecf4d7f1ce0096a692741,\n                \"Satellite\": tile_layer_bdb278bfd7bf45bd3f1b7e3f12a6fdd3,\n                \"Standard\": tile_layer_ef915ab92e0ddcb9e840955a9d4420f5,\n                \"Dark\": tile_layer_ec0e266dacdd9ae8792153e00204f440,\n                \"Topographic Dark\": tile_layer_980b7691b39ace86f5bc5a9b1a738389,\n                \"Streets Dark\": tile_layer_4378b744272a22f78c14c9e80b830eb8\n            };\n            const layerControl = L.control.layers(baseLayers, {}, {\n                position: \"topleft\",\n                collapsed: true\n            }).addTo(map);\n            setTimeout(()=>{\n                const layerControlElement = document.querySelector(\".leaflet-control-layers\");\n                if (layerControlElement) {\n                    let isDragging = false;\n                    let currentX;\n                    let currentY;\n                    let initialX;\n                    let initialY;\n                    let xOffset = 0;\n                    let yOffset = 0;\n                    layerControlElement.addEventListener(\"mousedown\", dragStart);\n                    document.addEventListener(\"mousemove\", drag);\n                    document.addEventListener(\"mouseup\", dragEnd);\n                    function dragStart(e) {\n                        if (e.target.closest(\".leaflet-control-layers-expanded\")) return; // Don't drag when dropdown is open\n                        initialX = e.clientX - xOffset;\n                        initialY = e.clientY - yOffset;\n                        if (e.target === layerControlElement || layerControlElement.contains(e.target)) {\n                            isDragging = true;\n                            layerControlElement.style.cursor = \"grabbing\";\n                        }\n                    }\n                    function drag(e) {\n                        if (isDragging) {\n                            e.preventDefault();\n                            currentX = e.clientX - initialX;\n                            currentY = e.clientY - initialY;\n                            xOffset = currentX;\n                            yOffset = currentY;\n                            layerControlElement.style.transform = \"translate3d(\".concat(currentX, \"px, \").concat(currentY, \"px, 0)\");\n                        }\n                    }\n                    function dragEnd(e) {\n                        initialX = currentX;\n                        initialY = currentY;\n                        isDragging = false;\n                        layerControlElement.style.cursor = \"move\";\n                    }\n                }\n            }, 100);\n            setTimeout(()=>{\n                const style = document.createElement(\"style\");\n                style.textContent = '\\n          .leaflet-control-zoom {\\n            background-color: rgba(60, 60, 60, 0.9) !important;\\n            border: 1px solid rgba(120, 120, 120, 0.5) !important;\\n            border-radius: 6px !important;\\n            box-shadow: 0 2px 8px rgba(0,0,0,0.3) !important;\\n          }\\n\\n          .leaflet-control-zoom a {\\n            background-color: rgba(60, 60, 60, 0.9) !important;\\n            color: white !important;\\n            border: none !important;\\n            font-weight: bold !important;\\n            text-shadow: 0 1px 2px rgba(0,0,0,0.5) !important;\\n          }\\n\\n          .leaflet-control-zoom a:hover {\\n            background-color: rgba(80, 80, 80, 0.9) !important;\\n            color: #bdc3c7 !important;\\n          }\\n\\n          .leaflet-control-layers {\\n            position: fixed !important;\\n            top: 20px !important;\\n            left: 50% !important;\\n            transform: translateX(-50%) !important;\\n            background-color: rgba(60, 60, 60, 0.9) !important;\\n            border: 1px solid rgba(120, 120, 120, 0.5) !important;\\n            border-radius: 6px !important;\\n            box-shadow: 0 4px 12px rgba(0,0,0,0.4) !important;\\n            backdrop-filter: blur(10px) !important;\\n            z-index: 1000 !important;\\n            cursor: move !important;\\n            min-width: 120px !important;\\n            max-width: 200px !important;\\n          }\\n\\n          .leaflet-control-layers-toggle {\\n            background-color: rgba(60, 60, 60, 0.9) !important;\\n            border: 1px solid rgba(120, 120, 120, 0.5) !important;\\n            border-radius: 6px !important;\\n            color: white !important;\\n            font-weight: 600 !important;\\n            text-transform: uppercase !important;\\n            font-size: 10px !important;\\n            padding: 6px 8px !important;\\n            min-width: 100px !important;\\n            text-align: center !important;\\n            display: flex !important;\\n            align-items: center !important;\\n            justify-content: space-between !important;\\n            cursor: move !important;\\n          }\\n\\n          .leaflet-control-layers-toggle::before {\\n            content: \"\\uD83D\\uDDFA️\" !important;\\n            margin-right: 4px !important;\\n            font-size: 12px !important;\\n          }\\n\\n          .leaflet-control-layers-toggle::after {\\n            content: \"▼\" !important;\\n            margin-left: 4px !important;\\n            font-size: 8px !important;\\n            transition: transform 0.3s ease !important;\\n          }\\n\\n          .leaflet-control-layers-expanded {\\n            background-color: rgba(255, 255, 255, 0.95) !important;\\n            color: #333 !important;\\n            border: 1px solid rgba(200, 200, 200, 0.8) !important;\\n            border-radius: 6px !important;\\n            box-shadow: 0 4px 12px rgba(0,0,0,0.3) !important;\\n            backdrop-filter: blur(10px) !important;\\n            margin-top: 4px !important;\\n            padding: 6px 0 !important;\\n            min-width: 120px !important;\\n            max-width: 200px !important;\\n          }\\n\\n          .leaflet-control-layers label {\\n            color: #333 !important;\\n            padding: 4px 8px !important;\\n            margin: 0 !important;\\n            font-size: 11px !important;\\n            cursor: pointer !important;\\n            transition: background-color 0.2s ease !important;\\n          }\\n\\n          .leaflet-control-layers label:hover {\\n            background-color: rgba(60, 60, 60, 0.1) !important;\\n          }\\n\\n          .leaflet-control-layers input[type=\"radio\"] {\\n            accent-color: #3498db !important;\\n            margin-right: 8px !important;\\n          }\\n\\n          .leaflet-control-attribution {\\n            background-color: rgba(60, 60, 60, 0.8) !important;\\n            color: #bdc3c7 !important;\\n            border: 1px solid rgba(120, 120, 120, 0.3) !important;\\n            border-radius: 4px !important;\\n            font-size: 11px !important;\\n          }\\n        ';\n                document.head.appendChild(style);\n            }, 100);\n            let isRightClicking = false;\n            let startX, startY;\n            map.getContainer().addEventListener(\"contextmenu\", function(e) {\n                e.preventDefault();\n                isRightClicking = true;\n                startX = e.clientX;\n                startY = e.clientY;\n                document.body.style.cursor = \"grabbing\";\n            });\n            map.getContainer().addEventListener(\"mousemove\", function(e) {\n                if (isRightClicking) {\n                    const deltaX = e.clientX - startX;\n                    const deltaY = e.clientY - startY;\n                    const bearingChange = deltaX * 0.5;\n                    const pitchChange = deltaY * 0.1;\n                    const currentBearing = map.getBearing ? map.getBearing() : 0;\n                    const newBearing = (currentBearing + bearingChange) % 360;\n                    if (map.setBearing) {\n                        map.setBearing(newBearing);\n                    }\n                    if (map.setPitch) {\n                        const currentPitch = map.getPitch ? map.getPitch() : 0;\n                        const newPitch = Math.max(0, Math.min(60, currentPitch + pitchChange));\n                        map.setPitch(newPitch);\n                    }\n                    startX = e.clientX;\n                    startY = e.clientY;\n                }\n            });\n            map.getContainer().addEventListener(\"mouseup\", function(e) {\n                if (isRightClicking) {\n                    isRightClicking = false;\n                    document.body.style.cursor = \"\";\n                }\n            });\n            map.getContainer().addEventListener(\"dblclick\", function(e) {\n                e.preventDefault();\n                if (map.setBearing) {\n                    map.setBearing(0);\n                }\n                if (map.setPitch) {\n                    map.setPitch(0);\n                }\n            });\n        };\n        loadMap();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        var _locationsData_locations, _segmentsData_segments;\n        console.log(\"Data check:\", {\n            mapReady: !!mapInstanceRef.current,\n            locationsData: (locationsData === null || locationsData === void 0 ? void 0 : (_locationsData_locations = locationsData.locations) === null || _locationsData_locations === void 0 ? void 0 : _locationsData_locations.length) || 0,\n            segmentsData: (segmentsData === null || segmentsData === void 0 ? void 0 : (_segmentsData_segments = segmentsData.segments) === null || _segmentsData_segments === void 0 ? void 0 : _segmentsData_segments.length) || 0,\n            loading,\n            error: !!error\n        });\n        if (!mapInstanceRef.current) {\n            console.log(\"❌ Map not ready yet\");\n            return;\n        }\n        if (loading) {\n            console.log(\"⏳ Data still loading...\");\n            return;\n        }\n        if (error) {\n            console.error(\"❌ GraphQL error:\", error);\n            return;\n        }\n        if (!(locationsData === null || locationsData === void 0 ? void 0 : locationsData.locations)) {\n            console.log(\"❌ No locations data\");\n            return;\n        }\n        if (!(segmentsData === null || segmentsData === void 0 ? void 0 : segmentsData.segments)) {\n            console.log(\"❌ No segments data\");\n            return;\n        }\n        console.log(\"✅ All data ready, processing...\");\n        console.log(\"\\uD83D\\uDCCD Locations data:\", locationsData.locations.length, \"locations\");\n        console.log(\"\\uD83D\\uDEE3️ Segments data:\", segmentsData.segments.length, \"segments\");\n        const map = mapInstanceRef.current;\n        const L = window.L;\n        map.eachLayer((layer)=>{\n            if (layer.options && (layer.options.isDataLayer || layer.options.isLocationLayer)) {\n                console.log(\"Removing layer:\", layer);\n                map.removeLayer(layer);\n            }\n        });\n        console.log(\"\\uD83D\\uDDD1️ Cleared existing data layers\");\n        let segmentsAdded = 0;\n        let segmentsWithGeometry = 0;\n        let segmentsWithoutGeometry = 0;\n        let openSegmentCount = 0;\n        let closedSegmentCount = 0;\n        console.log(\"\\uD83D\\uDEE3️ Starting to process segments:\", segmentsData.segments.length);\n        segmentsData.segments.forEach((segment, index)=>{\n            if (index < 10) {\n                console.log(\"Processing segment:\", segment.lane_id, \"Direction:\", segment.direction, \"Is closed:\", segment.is_closed);\n                if (typeof segment.geometry === \"string\") {\n                    try {\n                        var _geoJson_coordinates;\n                        const geoJson = JSON.parse(segment.geometry);\n                        console.log(\"Coordinates sample:\", (_geoJson_coordinates = geoJson.coordinates) === null || _geoJson_coordinates === void 0 ? void 0 : _geoJson_coordinates.slice(0, 2));\n                    } catch (e) {\n                        console.log(\"Failed to parse geometry:\", segment.geometry);\n                    }\n                }\n            }\n            let coordinates = null;\n            if (typeof segment.geometry === \"string\") {\n                try {\n                    const geoJson = JSON.parse(segment.geometry);\n                    coordinates = geoJson.coordinates;\n                    segmentsWithGeometry++;\n                } catch (e) {\n                    console.error(\"Failed to parse geometry for segment:\", segment.lane_id, e);\n                    segmentsWithoutGeometry++;\n                }\n            } else if (segment.geometry && segment.geometry.coordinates) {\n                coordinates = segment.geometry.coordinates;\n                segmentsWithGeometry++;\n            } else {\n                segmentsWithoutGeometry++;\n            }\n            if (coordinates && Array.isArray(coordinates)) {\n                var _segment_length_m, _segment_start_latitude, _segment_start_longitude, _segment_end_latitude, _segment_end_longitude;\n                let color, weight, opacity;\n                if (segment.is_closed) {\n                    color = \"#e74c3c\"; // Red for closed\n                    weight = 3;\n                    opacity = 0.8;\n                    closedSegmentCount++;\n                } else {\n                    color = \"#27ae60\"; // Green for open\n                    weight = 4;\n                    opacity = 0.8;\n                    openSegmentCount++;\n                }\n                let leafletCoords = coordinates;\n                if (coordinates.length > 0 && Array.isArray(coordinates[0])) {\n                    if (coordinates[0].length === 2 && coordinates[0][0] > coordinates[0][1]) {\n                        leafletCoords = coordinates.map((coord)=>[\n                                coord[1],\n                                coord[0]\n                            ]);\n                    }\n                }\n                const polyline = L.polyline(leafletCoords, {\n                    color: color,\n                    weight: weight,\n                    opacity: opacity,\n                    fillOpacity: 0.8,\n                    isDataLayer: true\n                }).addTo(map);\n                const popup = '\\n          <div style=\"font-family: \\'Segoe UI\\', sans-serif; font-size: 13px; line-height: 1.5; min-width: 200px; padding: 8px; \\n                      background-color: rgba(60, 60, 60, 0.9); color: white; border-radius: 6px; \\n                      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\">\\n            <div style=\"font-weight: 700; color: white; margin-bottom: 10px; font-size: 14px; border-bottom: 2px solid '.concat(color, '; padding-bottom: 6px;\">\\n              ').concat(segment.lane_id, '\\n            </div>\\n            <div style=\"margin-bottom: 6px;\">\\n              <span style=\"color: #ecf0f1; font-weight: 500;\">Road ID:</span>\\n              <span style=\"color: white; font-weight: 600; margin-left: 8px;\">').concat(segment.road_id, '</span>\\n            </div>\\n            <div style=\"margin-bottom: 6px;\">\\n              <span style=\"color: #ecf0f1; font-weight: 500;\">Length:</span>\\n              <span style=\"color: white; font-weight: 600; margin-left: 8px;\">').concat(((_segment_length_m = segment.length_m) === null || _segment_length_m === void 0 ? void 0 : _segment_length_m.toFixed(1)) || \"N/A\", 'm</span>\\n            </div>\\n            <div style=\"margin-bottom: 6px;\">\\n              <span style=\"color: #ecf0f1; font-weight: 500;\">Status:</span>\\n              <span style=\"color: ').concat(segment.is_closed ? \"#ff6b6b\" : \"#51cf66\", '; font-weight: 600; margin-left: 8px;\">').concat(segment.is_closed ? \"Closed\" : \"Open\", '</span>\\n            </div>\\n            <div style=\"color: #bdc3c7; font-size: 11px; margin-top: 8px; padding-top: 6px; border-top: 1px solid #7f8c8d; font-style: italic;\">\\n              ').concat((_segment_start_latitude = segment.start_latitude) === null || _segment_start_latitude === void 0 ? void 0 : _segment_start_latitude.toFixed(6), \", \").concat((_segment_start_longitude = segment.start_longitude) === null || _segment_start_longitude === void 0 ? void 0 : _segment_start_longitude.toFixed(6), \" → \").concat((_segment_end_latitude = segment.end_latitude) === null || _segment_end_latitude === void 0 ? void 0 : _segment_end_latitude.toFixed(6), \", \").concat((_segment_end_longitude = segment.end_longitude) === null || _segment_end_longitude === void 0 ? void 0 : _segment_end_longitude.toFixed(6), \"\\n            </div>\\n          </div>\\n        \");\n                polyline.bindPopup(popup);\n                segmentsAdded++;\n            }\n        });\n        console.log(\"\\uD83D\\uDEE3️ Added \".concat(segmentsAdded, \" road segments to map\"));\n        console.log(\"\\uD83D\\uDCCA Segment processing summary: \".concat(segmentsWithGeometry, \" with geometry, \").concat(segmentsWithoutGeometry, \" without geometry\"));\n        let locationsAdded = 0;\n        // Generate random colors for location types\n        const generateLocationTypeColors = (locationTypes)=>{\n            const colorPalette = [\n                \"#BB8FCE\",\n                \"#45B7D1\",\n                \"#2E86AB\",\n                \"#98D8C8\",\n                \"#F7DC6F\",\n                \"#F8C471\",\n                \"#D4AC0D\",\n                \"#17A2B8\",\n                \"#E74C3C\",\n                \"#E67E22\",\n                \"#8E44AD\",\n                \"#16A085\",\n                \"#F39C12\",\n                \"#D35400\",\n                \"#2980B9\",\n                \"#C0392B\",\n                \"#3498DB\",\n                \"#9B59B6\",\n                \"#1ABC9C\",\n                \"#95A5A6\",\n                \"#E91E63\",\n                \"#9C27B0\",\n                \"#673AB7\",\n                \"#3F51B5\",\n                \"#2196F3\",\n                \"#00BCD4\",\n                \"#009688\",\n                \"#4CAF50\",\n                \"#8BC34A\",\n                \"#CDDC39\",\n                \"#FFEB3B\",\n                \"#FFC107\",\n                \"#FF9800\",\n                \"#FF5722\",\n                \"#795548\",\n                \"#607D8B\"\n            ];\n            const colors = {};\n            const usedColors = new Set();\n            locationTypes.forEach((type, index)=>{\n                // Try to assign a color that hasn't been used yet\n                let colorIndex = index % colorPalette.length;\n                let attempts = 0;\n                while(usedColors.has(colorPalette[colorIndex]) && attempts < colorPalette.length){\n                    colorIndex = (colorIndex + 1) % colorPalette.length;\n                    attempts++;\n                }\n                colors[type] = colorPalette[colorIndex];\n                usedColors.add(colorPalette[colorIndex]);\n            });\n            return colors;\n        };\n        // Get unique location types and generate colors\n        const uniqueLocationTypes = [\n            ...new Set(locationsData.locations.map((loc)=>loc.unit_type).filter(Boolean))\n        ];\n        const locationTypeColors = generateLocationTypeColors(uniqueLocationTypes);\n        console.log(\"\\uD83D\\uDCCD Processing locations...\");\n        locationsData.locations.forEach((location, index)=>{\n            if (index < 5) {\n                console.log(\"Location:\", location.location_name, \"Coords:\", location.latitude, location.longitude, \"Type:\", location.unit_type);\n            }\n            if (location.latitude && location.longitude) {\n                const markerColor = locationTypeColors[location.unit_type] || \"#95a5a6\";\n                const marker = L.circleMarker([\n                    location.latitude,\n                    location.longitude\n                ], {\n                    radius: 4,\n                    fillColor: markerColor,\n                    color: \"#fff\",\n                    weight: 1,\n                    opacity: 1,\n                    fillOpacity: 0.8,\n                    isLocationLayer: true\n                }).addTo(map);\n                const popup = '\\n          <div style=\"font-family: \\'Segoe UI\\', sans-serif; font-size: 13px; line-height: 1.5; min-width: 200px; padding: 8px; \\n                      background-color: rgba(60, 60, 60, 0.9); color: white; border-radius: 6px; \\n                      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\">\\n            <div style=\"font-weight: 700; color: white; margin-bottom: 10px; font-size: 14px; border-bottom: 2px solid '.concat(markerColor, '; padding-bottom: 6px;\">\\n              ').concat(location.location_name, '\\n            </div>\\n            <div style=\"margin-bottom: 6px;\">\\n              <span style=\"color: #ecf0f1; font-weight: 500;\">Type:</span>\\n              <span style=\"color: white; font-weight: 600; margin-left: 8px;\">').concat(location.unit_type || \"Unknown\", '</span>\\n            </div>\\n            <div style=\"margin-bottom: 6px;\">\\n              <span style=\"color: #ecf0f1; font-weight: 500;\">Category:</span>\\n              <span style=\"color: white; font-weight: 600; margin-left: 8px;\">').concat(location.location_category, \"</span>\\n            </div>\\n            \").concat(location.elevation_m ? '\\n            <div style=\"margin-bottom: 6px;\">\\n              <span style=\"color: #ecf0f1; font-weight: 500;\">Elevation:</span>\\n              <span style=\"color: white; font-weight: 600; margin-left: 8px;\">'.concat(location.elevation_m.toFixed(1), \"m</span>\\n            </div>\") : \"\", \"\\n            \").concat(location.pit_name ? '\\n            <div style=\"margin-bottom: 6px;\">\\n              <span style=\"color: #ecf0f1; font-weight: 500;\">Pit:</span>\\n              <span style=\"color: white; font-weight: 600; margin-left: 8px;\">'.concat(location.pit_name, \"</span>\\n            </div>\") : \"\", \"\\n            \").concat(location.region_name ? '\\n            <div style=\"margin-bottom: 6px;\">\\n              <span style=\"color: #ecf0f1; font-weight: 500;\">Region:</span>\\n              <span style=\"color: white; font-weight: 600; margin-left: 8px;\">'.concat(location.region_name, \"</span>\\n            </div>\") : \"\", '\\n            <div style=\"color: #bdc3c7; font-size: 11px; margin-top: 8px; padding-top: 6px; border-top: 1px solid #7f8c8d; font-style: italic;\">\\n              ').concat(location.latitude.toFixed(6), \", \").concat(location.longitude.toFixed(6), \"\\n            </div>\\n          </div>\\n        \");\n                marker.bindPopup(popup);\n                locationsAdded++;\n            }\n        });\n        console.log(\"\\uD83D\\uDCCD Added \".concat(locationsAdded, \" location markers to map\"));\n        if (locationsAdded > 0 || segmentsAdded > 0) {\n            const allLatLngs = [];\n            locationsData.locations.forEach((location)=>{\n                if (location.latitude && location.longitude) {\n                    allLatLngs.push([\n                        location.latitude,\n                        location.longitude\n                    ]);\n                }\n            });\n            segmentsData.segments.forEach((segment)=>{\n                if (segment.geometry) {\n                    try {\n                        const geoJson = JSON.parse(segment.geometry);\n                        if (geoJson.coordinates && Array.isArray(geoJson.coordinates)) {\n                            geoJson.coordinates.forEach((coord)=>{\n                                allLatLngs.push([\n                                    coord[1],\n                                    coord[0]\n                                ]);\n                            });\n                        }\n                    } catch (e) {\n                    // Skip invalid geometry\n                    }\n                }\n            });\n            if (allLatLngs.length > 0) {\n                const bounds = L.latLngBounds(allLatLngs);\n                map.fitBounds(bounds, {\n                    padding: [\n                        50,\n                        50\n                    ],\n                    maxZoom: 16\n                });\n                const center = bounds.getCenter();\n                const zoom = map.getZoom();\n                console.log(\"\\uD83D\\uDDFA️ Map centered at: \".concat(center.lat.toFixed(6), \", \").concat(center.lng.toFixed(6), \" with zoom: \").concat(zoom));\n                console.log(\"\\uD83D\\uDCCA Fitted bounds to \".concat(allLatLngs.length, \" data points\"));\n            }\n        }\n        console.log(\"\\uD83C\\uDFA8 Creating legend...\");\n        addSimpleLegend(locationsData.locations.length, segmentsAdded);\n        console.log(\"\\uD83C\\uDFA8 Legend creation completed\");\n    }, [\n        locationsData,\n        segmentsData,\n        loading,\n        error\n    ]);\n    const addSimpleLegend = (locationCount, segmentCount)=>{\n        console.log(\"\\uD83C\\uDFA8 addSimpleLegend called with:\", {\n            locationCount,\n            segmentCount\n        });\n        const existingLegend = document.getElementById(\"simple-legend\");\n        if (existingLegend) {\n            console.log(\"\\uD83C\\uDFA8 Removing existing legend\");\n            existingLegend.remove();\n        }\n        let openRoads = 0;\n        let closedRoads = 0;\n        if (segmentsData === null || segmentsData === void 0 ? void 0 : segmentsData.segments) {\n            segmentsData.segments.forEach((segment)=>{\n                if (segment.is_closed) {\n                    closedRoads++;\n                } else {\n                    openRoads++;\n                }\n            });\n        }\n        const locationTypes = {};\n        if (locationsData === null || locationsData === void 0 ? void 0 : locationsData.locations) {\n            locationsData.locations.forEach((location)=>{\n                const type = location.unit_type || \"Unknown\";\n                locationTypes[type] = (locationTypes[type] || 0) + 1;\n            });\n        }\n        // Generate colors for legend using the same function\n        const generateLegendColors = (locationTypes)=>{\n            const colorPalette = [\n                \"#BB8FCE\",\n                \"#45B7D1\",\n                \"#2E86AB\",\n                \"#98D8C8\",\n                \"#F7DC6F\",\n                \"#F8C471\",\n                \"#D4AC0D\",\n                \"#17A2B8\",\n                \"#E74C3C\",\n                \"#E67E22\",\n                \"#8E44AD\",\n                \"#16A085\",\n                \"#F39C12\",\n                \"#D35400\",\n                \"#2980B9\",\n                \"#C0392B\",\n                \"#3498DB\",\n                \"#9B59B6\",\n                \"#1ABC9C\",\n                \"#95A5A6\",\n                \"#E91E63\",\n                \"#9C27B0\",\n                \"#673AB7\",\n                \"#3F51B5\",\n                \"#2196F3\",\n                \"#00BCD4\",\n                \"#009688\",\n                \"#4CAF50\",\n                \"#8BC34A\",\n                \"#CDDC39\",\n                \"#FFEB3B\",\n                \"#FFC107\",\n                \"#FF9800\",\n                \"#FF5722\",\n                \"#795548\",\n                \"#607D8B\"\n            ];\n            const colors = {};\n            const usedColors = new Set();\n            locationTypes.forEach((type, index)=>{\n                let colorIndex = index % colorPalette.length;\n                let attempts = 0;\n                while(usedColors.has(colorPalette[colorIndex]) && attempts < colorPalette.length){\n                    colorIndex = (colorIndex + 1) % colorPalette.length;\n                    attempts++;\n                }\n                colors[type] = colorPalette[colorIndex];\n                usedColors.add(colorPalette[colorIndex]);\n            });\n            return colors;\n        };\n        const locationTypeColors = generateLegendColors(Object.keys(locationTypes));\n        const legendHtml = '\\n      <div id=\"simple-legend\" style=\"position: fixed; top: 20px; right: 20px; \\n              background-color: rgba(60, 60, 60, 0.7); color: white; \\n              border-radius: 8px; font-family: \\'Segoe UI\\', sans-serif;\\n              box-shadow: 0 4px 20px rgba(0,0,0,0.6); z-index: 1000; \\n              min-width: 280px; max-height: 400px; overflow-y: auto;\\n              backdrop-filter: blur(10px); cursor: move;\">\\n        \\n        <div id=\"legend-header\" style=\"background-color: rgba(40, 40, 40, 0.9); padding: 12px 16px; \\n                    border-radius: 8px 8px 0 0; display: flex; align-items: center; justify-content: space-between; cursor: move;\"\\n             onclick=\"toggleLegend()\">\\n          <div style=\"display: flex; align-items: center;\">\\n            <div style=\"width: 20px; height: 20px; background-color: #3498db; border-radius: 4px; \\n                        margin-right: 10px; display: flex; align-items: center; justify-content: center;\">\\n              <span style=\"color: white; font-size: 12px; font-weight: bold;\">⛏</span>\\n            </div>\\n            <span style=\"color: white; font-weight: 600; font-size: 14px;\">Mine Map</span>\\n          </div>\\n          <div id=\"legend-toggle-arrow\" style=\"color: white; font-size: 16px; cursor: pointer;\">▼</div>\\n        </div>\\n        \\n        <div id=\"legend-content\" style=\"padding: 0; color: white; font-size: 12px;\">\\n          \\n          <div style=\"border-left: 3px solid #3498db; margin: 8px 0;\">\\n            <div id=\"road-layers-header\" style=\"background-color: rgba(52, 152, 219, 0.1); padding: 8px 12px; cursor: pointer; \\n                        display: flex; align-items: center; justify-content: space-between;\"\\n                 onclick=\"toggleSection(\\'road-layers-content\\', \\'road-layers-arrow\\')\">\\n              <div style=\"display: flex; align-items: center;\">\\n                <div style=\"width: 16px; height: 16px; background-color: #3498db; border-radius: 3px; \\n                            margin-right: 8px; display: flex; align-items: center; justify-content: center;\">\\n                  <span style=\"color: white; font-size: 10px;\">\\uD83D\\uDEE3</span>\\n                </div>\\n                <span style=\"color: #3498db; font-weight: 600; font-size: 13px;\">Road Layers</span>\\n                <div style=\"background-color: #3498db; color: white; border-radius: 10px; \\n                            padding: 2px 8px; margin-left: 8px; font-size: 10px;\">2</div>\\n              </div>\\n              <div id=\"road-layers-arrow\" style=\"color: #3498db; font-size: 14px;\">▼</div>\\n            </div>\\n            <div id=\"road-layers-content\" style=\"padding: 8px 12px 8px 32px;\">\\n              <div style=\"display: flex; align-items: center; margin-bottom: 6px;\">\\n                <div style=\"width: 12px; height: 3px; background-color: #27ae60; margin-right: 10px; border-radius: 2px;\"></div>\\n                <span style=\"color: #bdc3c7;\">Open Roads ('.concat(openRoads, ')</span>\\n              </div>\\n              <div style=\"display: flex; align-items: center; margin-bottom: 6px;\">\\n                <div style=\"width: 12px; height: 3px; background-color: #e74c3c; margin-right: 10px; border-radius: 2px;\"></div>\\n                <span style=\"color: #bdc3c7;\">Closed Roads (').concat(closedRoads, ')</span>\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div style=\"border-left: 3px solid #e74c3c; margin: 8px 0;\">\\n            <div id=\"location-types-header\" style=\"background-color: rgba(231, 76, 60, 0.1); padding: 8px 12px; cursor: pointer; \\n                        display: flex; align-items: center; justify-content: space-between;\"\\n                 onclick=\"toggleSection(\\'location-types-content\\', \\'location-types-arrow\\')\">\\n              <div style=\"display: flex; align-items: center;\">\\n                <div style=\"width: 16px; height: 16px; background-color: #e74c3c; border-radius: 3px; \\n                            margin-right: 8px; display: flex; align-items: center; justify-content: center;\">\\n                  <span style=\"color: white; font-size: 10px;\">\\uD83D\\uDCCD</span>\\n                </div>\\n                <span style=\"color: #e74c3c; font-weight: 600; font-size: 13px;\">Location Types</span>\\n                <div style=\"background-color: #e74c3c; color: white; border-radius: 10px; \\n                            padding: 2px 8px; margin-left: 8px; font-size: 10px;\">').concat(Object.keys(locationTypes).length, '</div>\\n              </div>\\n              <div id=\"location-types-arrow\" style=\"color: #e74c3c; font-size: 14px;\">▼</div>\\n            </div>\\n            <div id=\"location-types-content\" style=\"padding: 8px 12px 8px 32px;\">\\n              ').concat(Object.entries(locationTypes).sort((a, b)=>b[1] - a[1]).map((param)=>{\n            let [type, count] = param;\n            const color = locationTypeColors[type] || \"#95a5a6\";\n            return '\\n                <div style=\"display: flex; align-items: center; margin-bottom: 6px;\">\\n                  <div style=\"width: 8px; height: 8px; background-color: '.concat(color, '; margin-right: 10px; border-radius: 50%;\"></div>\\n                  <span style=\"color: #bdc3c7;\">').concat(type, \" (\").concat(count, \")</span>\\n                </div>\");\n        }).join(\"\"), \"\\n            </div>\\n          </div>\\n          \\n        </div>\\n      </div>\\n    \");\n        const legendElement = document.createElement(\"div\");\n        legendElement.innerHTML = legendHtml;\n        document.body.appendChild(legendElement);\n        window.toggleSection = function(contentId, arrowId) {\n            const content = document.getElementById(contentId);\n            const arrow = document.getElementById(arrowId);\n            if (content.style.display === \"none\") {\n                content.style.display = \"block\";\n                arrow.textContent = \"▼\";\n            } else {\n                content.style.display = \"none\";\n                arrow.textContent = \"▶\";\n            }\n        };\n        window.toggleLegend = function() {\n            const content = document.getElementById(\"legend-content\");\n            const arrow = document.getElementById(\"legend-toggle-arrow\");\n            if (content.style.display === \"none\") {\n                content.style.display = \"block\";\n                arrow.textContent = \"▼\";\n            } else {\n                content.style.display = \"none\";\n                arrow.textContent = \"▶\";\n            }\n        };\n        let isDragging = false;\n        let currentX;\n        let currentY;\n        let initialX;\n        let initialY;\n        let xOffset = 0;\n        let yOffset = 0;\n        const legend = document.getElementById(\"simple-legend\");\n        const header = document.getElementById(\"legend-header\");\n        header.addEventListener(\"mousedown\", dragStart);\n        document.addEventListener(\"mousemove\", drag);\n        document.addEventListener(\"mouseup\", dragEnd);\n        function dragStart(e) {\n            if (e.target.id === \"legend-toggle-arrow\") return;\n            initialX = e.clientX - xOffset;\n            initialY = e.clientY - yOffset;\n            if (e.target === header || header.contains(e.target)) {\n                isDragging = true;\n            }\n        }\n        function drag(e) {\n            if (isDragging) {\n                e.preventDefault();\n                currentX = e.clientX - initialX;\n                currentY = e.clientY - initialY;\n                xOffset = currentX;\n                yOffset = currentY;\n                legend.style.transform = \"translate3d(\".concat(currentX, \"px, \").concat(currentY, \"px, 0)\");\n            }\n        }\n        function dragEnd(e) {\n            initialX = currentX;\n            initialY = currentY;\n            isDragging = false;\n        }\n        console.log(\"\\uD83C\\uDFA8 Legend element added to DOM with collapsible functionality\");\n    };\n    if (error) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n            style: {\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                zIndex: 1000,\n                background: \"rgba(255, 255, 255, 0.9)\",\n                padding: \"20px\",\n                borderRadius: \"8px\",\n                boxShadow: \"0 4px 20px rgba(0,0,0,0.3)\",\n                color: \"red\"\n            },\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"h3\", {\n                    children: \"Error Loading Map Data\"\n                }, void 0, false, {\n                    fileName: \"/app/components/MapComponent.js\",\n                    lineNumber: 1007,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {\n                    children: [\n                        \"Error: \",\n                        error\n                    ]\n                }, void 0, true, {\n                    fileName: \"/app/components/MapComponent.js\",\n                    lineNumber: 1008,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/app/components/MapComponent.js\",\n            lineNumber: 995,\n            columnNumber: 7\n        }, this);\n    }\n    console.log(\"Render check:\", {\n        locationsData: (locationsData === null || locationsData === void 0 ? void 0 : (_locationsData_locations = locationsData.locations) === null || _locationsData_locations === void 0 ? void 0 : _locationsData_locations.length) || 0,\n        segmentsData: (segmentsData === null || segmentsData === void 0 ? void 0 : (_segmentsData_segments = segmentsData.segments) === null || _segmentsData_segments === void 0 ? void 0 : _segmentsData_segments.length) || 0,\n        loading,\n        error: !!error\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        style: {\n            position: \"relative\",\n            width: \"100%\",\n            height: \"100vh\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                className: \"folium-map\",\n                id: \"map\",\n                ref: mapRef,\n                style: {\n                    width: \"100%\",\n                    height: \"100vh\",\n                    minHeight: \"600px\",\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    zIndex: 1\n                }\n            }, void 0, false, {\n                fileName: \"/app/components/MapComponent.js\",\n                lineNumber: 1022,\n                columnNumber: 7\n            }, this),\n            loading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n                style: {\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    zIndex: 1000,\n                    background: \"rgba(255, 255, 255, 0.9)\",\n                    padding: \"20px\",\n                    borderRadius: \"8px\",\n                    boxShadow: \"0 4px 20px rgba(0,0,0,0.3)\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"h3\", {\n                        children: \"Loading Dispatch Database Map...\"\n                    }, void 0, false, {\n                        fileName: \"/app/components/MapComponent.js\",\n                        lineNumber: 1048,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {\n                        children: \"Fetching roads and locations...\"\n                    }, void 0, false, {\n                        fileName: \"/app/components/MapComponent.js\",\n                        lineNumber: 1049,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/app/components/MapComponent.js\",\n                lineNumber: 1037,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/app/components/MapComponent.js\",\n        lineNumber: 1021,\n        columnNumber: 5\n    }, this);\n}\n_s(MapComponent, \"vFi6ajrled7KrEGQZebJdB/Ow04=\", false, function() {\n    return [\n        _apollo_client__WEBPACK_IMPORTED_MODULE_3__.useQuery,\n        _apollo_client__WEBPACK_IMPORTED_MODULE_3__.useQuery\n    ];\n});\n_c = MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/MapComponent.js\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/esm/_tagged_template_literal.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@swc/helpers/esm/_tagged_template_literal.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: function() { return /* binding */ _tagged_template_literal; },\n/* harmony export */   _tagged_template_literal: function() { return /* binding */ _tagged_template_literal; }\n/* harmony export */ });\nfunction _tagged_template_literal(strings, raw) {\n    if (!raw) raw = strings.slice(0);\n\n    return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2VzbS9fdGFnZ2VkX3RlbXBsYXRlX2xpdGVyYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTztBQUNQOztBQUVBLDREQUE0RCxPQUFPLDZCQUE2QjtBQUNoRztBQUN5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2VzbS9fdGFnZ2VkX3RlbXBsYXRlX2xpdGVyYWwuanM/ZTM4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gX3RhZ2dlZF90ZW1wbGF0ZV9saXRlcmFsKHN0cmluZ3MsIHJhdykge1xuICAgIGlmICghcmF3KSByYXcgPSBzdHJpbmdzLnNsaWNlKDApO1xuXG4gICAgcmV0dXJuIE9iamVjdC5mcmVlemUoT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoc3RyaW5ncywgeyByYXc6IHsgdmFsdWU6IE9iamVjdC5mcmVlemUocmF3KSB9IH0pKTtcbn1cbmV4cG9ydCB7IF90YWdnZWRfdGVtcGxhdGVfbGl0ZXJhbCBhcyBfIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/esm/_tagged_template_literal.js\n"));

/***/ })

}]);